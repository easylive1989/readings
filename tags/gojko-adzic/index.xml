<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Gojko Adzic on Readings</title><link>https://easylive1989.github.io/readings/tags/gojko-adzic/</link><description>Recent content in Gojko Adzic on Readings</description><generator>Hugo -- 0.144.2</generator><language>en</language><lastBuildDate>Mon, 17 Feb 2025 13:23:57 +0800</lastBuildDate><atom:link href="https://easylive1989.github.io/readings/tags/gojko-adzic/index.xml" rel="self" type="application/rss+xml"/><item><title>How to Develop Software Like Commanding a Tank</title><link>https://easylive1989.github.io/readings/backup/how-to-develop-software-like-commanding-a-tank/</link><pubDate>Mon, 17 Feb 2025 13:23:57 +0800</pubDate><guid>https://easylive1989.github.io/readings/backup/how-to-develop-software-like-commanding-a-tank/</guid><description>&lt;p>&lt;a href="https://gojko.net/2006/10/11/how-to-develop-software-like-commanding-a-tank/">Source&lt;/a>&lt;/p>
&lt;p>In &lt;a href="https://gojko.net/2006/10/07/sources-of-power/">The Sources of Power&lt;/a>, Gary Klein describes his research of variations in understanding orders among commanders and tank platoon leaders, reaching conclusions that giving answers to ‘&lt;em>what&lt;/em>’ and ‘&lt;em>how&lt;/em>’ does not prepare individual teams for reacting to unforeseen problems. As I was reading this, it struck me that this mismatch is also present in software development. Most of the time we get or give answers to ‘&lt;em>how&lt;/em>’ and ‘&lt;em>what&lt;/em>’, and then spend enormous effort on coordination when problems arise, as people start pulling in different directions.&lt;/p></description></item><item><title>From Bugs to Beam</title><link>https://easylive1989.github.io/readings/backup/from-bugs-to-beam/</link><pubDate>Mon, 17 Feb 2025 13:22:58 +0800</pubDate><guid>https://easylive1989.github.io/readings/backup/from-bugs-to-beam/</guid><description>&lt;p>&lt;a href="https://gojko.net/2024/09/30/from-bugs-to-beam/">Source&lt;/a>&lt;/p>
&lt;p>&lt;strong>It’s never been really clear to me what’s the difference between a bug report and a feature request. Yes, of course, there are clear cases at the extremes, but there is a huge gray zone with a lot of overlap. And it recently dawned on me that clearing up this gray zone actually surfaces some very significant product opportunities.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>我一直不太清楚 bug 回報和功能請求之間的區別。當然，在極端情況下是有明顯區別的，但有一個巨大的灰色地帶，兩者之間有很多重疊。我最近才意識到，釐清這個灰色地帶實際上會顯示出一些非常重要的產品機會。&lt;/strong>&lt;/p>
&lt;p>Both bugs and feature requests point to something missing from the product, and that something actually stands in the way of user success. Both need to be analysed, prioritised, developed and tested. Both come with a price tag. And in the words of an old-school project manager I worked with about two decades ago, the major difference is who picks up the bill. “Customers pay for feature requests, but we pay for bugs”, she said. “So make sure that from now on everything possible is a feature request”. Needless to say, that led to some awkward conversations.&lt;/p></description></item></channel></rss>