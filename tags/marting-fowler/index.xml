<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Marting Fowler on Readings</title><link>https://easylive1989.github.io/readings/tags/marting-fowler/</link><description>Recent content in Marting Fowler on Readings</description><generator>Hugo -- 0.145.0</generator><language>en</language><lastBuildDate>Fri, 07 Feb 2025 17:04:50 +0800</lastBuildDate><atom:link href="https://easylive1989.github.io/readings/tags/marting-fowler/index.xml" rel="self" type="application/rss+xml"/><item><title>Continuous Integration</title><link>https://easylive1989.github.io/readings/backup/continuous-integration/</link><pubDate>Fri, 07 Feb 2025 17:04:50 +0800</pubDate><guid>https://easylive1989.github.io/readings/backup/continuous-integration/</guid><description>&lt;p>&lt;a href="https://www.martinfowler.com/articles/continuousIntegration.html">Source&lt;/a>&lt;/p>
&lt;p>I vividly remember one of my first sightings of a large software project. I was taking a summer internship at a large English electronics company. My manager, part of the QA group, gave me a tour of a site and we entered a huge, depressing, windowless warehouse full of people working in cubicles. I was told that these programmers had been writing code for this software for a couple of years, and while they were done programming, their separate units were now being integrated together, and they had been integrating for several months. My guide told me that nobody really knew how long it would take to finish integrating. From this I learned a common story of software projects: integrating the work
of multiple developers is a long and unpredictable process.&lt;/p></description></item></channel></rss>