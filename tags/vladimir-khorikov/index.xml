<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Vladimir Khorikov on Readings</title><link>https://easylive1989.github.io/readings/tags/vladimir-khorikov/</link><description>Recent content in Vladimir Khorikov on Readings</description><generator>Hugo -- 0.143.1</generator><language>en</language><lastBuildDate>Fri, 07 Feb 2025 17:19:54 +0800</lastBuildDate><atom:link href="https://easylive1989.github.io/readings/tags/vladimir-khorikov/index.xml" rel="self" type="application/rss+xml"/><item><title>Tdd Best Practices</title><link>https://easylive1989.github.io/readings/backup/tdd-best-practices/</link><pubDate>Fri, 07 Feb 2025 17:19:54 +0800</pubDate><guid>https://easylive1989.github.io/readings/backup/tdd-best-practices/</guid><description>&lt;p>&lt;a href="https://enterprisecraftsmanship.com/posts/tdd-best-practices/">Source&lt;/a>&lt;/p>
&lt;p>Last week, we discussed the differences between stubs and mocks. Today, we’ll talk about some general tips and advice that regard to TDD and writing tests in general.&lt;/p>
&lt;ul>
&lt;li>Test-induced design damage or why TDD is so painful&lt;/li>
&lt;li>How to do painless TDD&lt;/li>
&lt;li>Integration testing or how to sleep well at nights&lt;/li>
&lt;li>The most important TDD rule&lt;/li>
&lt;li>Stubs vs Mocks&lt;/li>
&lt;li>&lt;strong>TDD best practices&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h2 id="test-first-vs-code-first-approach">Test-first vs code-first approach&lt;/h2>
&lt;p>There’s some dispute about how exactly tests should be written. While the TDD process itself insists on the test-first approach, I personally think that both ways are applicable in different circumstances. Let’s look at the pros and cons of each of them.&lt;/p></description></item></channel></rss>